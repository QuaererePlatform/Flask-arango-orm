version: 2.1

workflows:
  version: 2
  
  build_and_deploy:
    jobs:
      - deps-py37:
          filters:
            tags:
              only: /.*/
      - test-py37:
          requires:
            - deps-py37
      - pypi:
          requires:
            - deps-py37
            - test-py37
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/

jobs:

  deps-py37:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ .Branch }}-{{ checksum "requirements.txt" }}-py37
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip3 install -r requirements.txt
      - save_cache:
          key: v1-dependency-cache-{{ .Branch }}-{{ checksum "requirements.txt" }}-py37
          paths:
            - "venv"

  test-py37:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ .Branch }}-{{ checksum "requirements.txt" }}-py37
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python setup.py test
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
      - run:
          name: Smoke Test Install
          command: |
            python --version
            python setup.py install

  pypi:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ .Branch }}-{{ checksum "requirements.txt" }}-py37
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py build
      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = ravenoak" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            python setup.py sdist
            python setup.py bdist_wheel
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*
